- name: Set up the machine as root
  hosts: c00.mtric.net  
  remote_user: "{{ superuser }}"
  tasks:
  - name: Initialize apt
    apt:
      update_cache: true
  - name: Do the apt upgrade
    apt:
      upgrade: full
      force: true
  - name: Install all the needed packages
    apt:
      pkg: [build-essential, curl, git, libcap-dev, libssl-dev, libuv1-dev, man, pkg-config, 
        postgresql, pyflakes3, python-ply, python-psycopg2, python3-psycopg2, python3-paramiko, rsync, unzip]
  - name: Put .bashrc for root
    copy:
      src: ../bashrc-for-metrics-and-root
      dest: /root/.bashrc
  - name: Make /sftp for transfer user
    file:
      path: /sftp
      state: directory
      mode: go-w
  - name: Replace sshd_config
    copy:
      src: ../etc_sshd_config_shorter
      dest: /etc/ssh/sshd_config
  - name: Restart sshd after changing the config
    systemd:
      state: restarted
      name: sshd.service
      daemon_reload: yes      
  - name: Make user 'transfer'
    user:
      name: transfer
      home: /sftp/transfer
      shell: /bin/bash
  - name: Make user 'metrics'
    user: 
      name: metrics
      home: /home/metrics
      shell: /bin/bash
  - name: Initialize Postgres for metrics
    become_user: postgres
    become: true
    postgresql_user:
      name: metrics
      role_attr_flags: CREATEDB,NOSUPERUSER
- name: Set up transfer user
  hosts: new_vps
  remote_user: "{{ superuser }}"
  become_user: transfer
  become: yes
  tasks:
  - name: Create Output/
    file:
      path: /sftp/transfer/Output
      mode: go+w
      state: directory
- name: Install things as metrics
  hosts: c00.mtric.net  
  remote_user: "{{ superuser }}"
  become: true
  become_user: metrics
  tasks:
  - name: Put .bashrc for metrics
    template:
      src: ../bashrc-for-metrics-and-root
      dest: /home/metrics/.bashrc
  - name: Make .ssh for metrics
    file:
      path: /home/metrics/.ssh
      state: directory
      mode: go-rwx
  - name: Copy public key for transfer
    copy:
      src: ../Local/transfer-id_rsa.pub
      dest: /home/metrics/.ssh/id_rsa.pub
      mode: go-rwx
  - name: Copy private key for transfer
    copy:
      src: ../Local/transfer-id_rsa
      dest: /home/metrics/.ssh/id_rsa
      mode: go-rwx
  - name: Turn off hashing of names in known_hosts
    copy:
      src: ../home_ssh_config
      dest: /home/metrics/.ssh/ssh_config
      mode: go-rwx
  - name: Get our version of known_hosts
    copy:
      src: ../vp_known_hosts
      dest: /home/metrics/.ssh/known_hosts
      mode: go-rwx
  - name: make Source/
    file:
      path: /home/metrics/Source
      mode: u+wrx,go+rx
      state: directory
  - name: make Target/
    file:
      path: /home/metrics/Target
      mode: u+wrx,go+rx
      state: directory
  - name: Put local BIND tarball and expand it
    unarchive: 
      src: ../bind-9.16.1.tar.xz
      dest: /home/metrics/Source
      creates: /home/metrics/Source/bind-9.16.1
  - name: Make BIND
    shell:
      chdir: /home/metrics/Source/bind-9.16.1
      cmd: "./configure --prefix=/home/metrics/Target; make install"
      creates: /home/metrics/Target/bin/dig
  - name: Put vp_list.txt
    copy:
      src: ../vp_list.txt
      dest: /home/metrics/vp_list.txt
  - name: Give the crontab entry for get_root_zone.py
    cron:   # [mba] [wca]
      name: Get the new root zone
      minute: "3,33"
      job: "/home/metrics/repo/get_root_zone.py >>/home/metrics/Logs/cron-alert.txt 2>&1"
  - name: Give the crontab entry for pull_from_vps.py
    cron:
      name: Pull data from the VPs
      minute: "4,34"
      job: "/home/metrics/repo/pull_from_vps.py >>/home/metrics/Logs/cron-alert.txt 2>&1"
- name: Do Postgres stuff
  hosts: c00.mtric.net  
  remote_user: "{{ superuser }}"
  become: true
  become_user: metrics
  tasks:
  - name: Create first database
    postgresql_db:
      login_user: metrics
      name: metrics
  - name: Create table for files gotten
    postgresql_table:
      login_user: metrics
      db: metrics
      name: files_gotten
      columns:
      - filename_full text
      - retrieved_at timestamp
