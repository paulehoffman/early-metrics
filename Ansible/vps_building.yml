- name: Set up the machine as root
  hosts: new_vps  
  remote_user: root
  tasks:
  - name: Initialize apt
    apt:
      update_cache: true
  - name: Do the apt upgrade
    apt:
      upgrade: full
      force: true
  - name: Install all the needed packages
    apt:
      pkg: [build-essential, curl, git, libcap-dev, libssl-dev, libuv1-dev, man, pkg-config,
        pyflakes3, python-ply, rsync, scamper, traceroute, unzip]
  - name: Put .bashrc for root
    copy:
      src: bashrc-for-root
      dest: /root/.bashrc
  - name: Make user 'metrics'
    user:
      name: metrics
      home: /home/metrics
      shell: /bin/bash
      generate_ssh_key: yes
      ssh_key_bits: 2048
      ssh_key_comment: Key for {{ inventory_hostname_short }}
- name: Set up metrics user
  hosts: new_vps
  remote_user: root
  become_user: metrics
  become: yes
  tasks:
  - name: Get the generated public key for metrics
    fetch:
      src: /home/metrics/.ssh/id_rsa.pub
      dest: ../Local/VP-keys/{{ inventory_hostname_short }}-id_rsa.pub
      flat: yes
  - name: Put the known_hosts for c00
    known_hosts:
      key: {{ lookup("file", "../Local/key-for-c00.txt") }}
  - name: Put .bashrc for metrics
    template:
      src: bashrc-for-metrics
      dest: /home/metrics/.bashrc
  - name: Put short-host-name.txt
    template:
      src: short-host-name.txt
      dest: /home/metrics/short-host-name.txt
  - name: Generate an SSH key for nnn-transfer on the conroller
    command:
      cmd: ssh-keygen -q -t rsa -b 2048 -N "" -C "for transfer-{{ inventory_hostname_short }}" -f /home/metrics/transfer-{{ inventory_hostname_short }}
      creates: /home/metrics/transfer-{{ inventory_hostname_short }}
  - name: Get the private key for transfer-nnn
    fetch:
      src: /home/metrics/transfer-{{ inventory_hostname_short }}
      dest: ../Local/Transfer-keys/{{ inventory_hostname_short }}
      flat: yes
  - name: Get the private key for transfer-nnn
    fetch:
      src: /home/metrics/transfer-{{ inventory_hostname_short }}
      dest: ../Local/Transfer-keys/{{ inventory_hostname_short }}
      flat: yes
  - name: Get the public key for transfer-nnn
    fetch:
      src: /home/metrics/transfer-{{ inventory_hostname_short }}.pub
      dest: ../Local/Transfer-keys/{{ inventory_hostname_short }}.pub
      flat: yes
  - name: make Source/
    file:
      path: /home/metrics/Source
      mode: u+wrx,go+rx
      state: directory
  - name: make Logs/
    file:
      path: /home/metrics/Logs
      mode: u+wrx,go+rx
      state: directory
  - name: make Target/
    file:
      path: /home/metrics/Target
      mode: u+wrx,go+rx
      state: directory
  - name: Put local BIND tarball and expand it
    unarchive: 
      src: bind-9.16.0.tar.xz
      dest: /home/metrics/Source
      creates: /home/metrics/Source/bind-9.16.0
  - name: Make BIND
    shell:
      chdir: /home/metrics/Source/bind-9.16.0
      cmd: "./configure --prefix=/home/metrics/Target; make install"
      creates: /home/metrics/Target/bin/dig
  - name: Clone the repo
    git:
      repo: 'https://github.com/paulehoffman/early-metrics.git'
      dest: /home/metrics/repo
  - name: Set up the crontab path
    cron:
      env: yes
      name: SHELL
      job: /bin/bash
  - name: Give the first crontab entry
    cron:
      name: Get measurements
      minute: "0-59/5"
      job: "/home/metrics/repo/vantage_point_metrics.py >>/home/metrics/Logs/cron-alert.txt 2>&1"
  